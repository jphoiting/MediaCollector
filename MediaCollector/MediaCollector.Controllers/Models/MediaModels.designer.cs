#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MediaCollector.Controllers.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Media")]
	public partial class MediaModelsDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertMedia(Media instance);
    partial void UpdateMedia(Media instance);
    partial void DeleteMedia(Media instance);
    partial void InsertMediaType(MediaType instance);
    partial void UpdateMediaType(MediaType instance);
    partial void DeleteMediaType(MediaType instance);
    #endregion
		
		public MediaModelsDataContext() : 
				base(global::MediaCollector.Controllers.Properties.Settings.Default.MediaConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public MediaModelsDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MediaModelsDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MediaModelsDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MediaModelsDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Media> Medias
		{
			get
			{
				return this.GetTable<Media>();
			}
		}
		
		public System.Data.Linq.Table<MediaType> MediaTypes
		{
			get
			{
				return this.GetTable<MediaType>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Media")]
	public partial class Media : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _EAN;
		
		private string _Title;
		
		private string _Description;
		
		private string _Image;
		
		private System.Nullable<int> _fkMediaTypeId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnEANChanging(string value);
    partial void OnEANChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnImageChanging(string value);
    partial void OnImageChanged();
    partial void OnfkMediaTypeIdChanging(System.Nullable<int> value);
    partial void OnfkMediaTypeIdChanged();
    #endregion
		
		public Media()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EAN", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string EAN
		{
			get
			{
				return this._EAN;
			}
			set
			{
				if ((this._EAN != value))
				{
					this.OnEANChanging(value);
					this.SendPropertyChanging();
					this._EAN = value;
					this.SendPropertyChanged("EAN");
					this.OnEANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="NVarChar(MAX)")]
		public string Image
		{
			get
			{
				return this._Image;
			}
			set
			{
				if ((this._Image != value))
				{
					this.OnImageChanging(value);
					this.SendPropertyChanging();
					this._Image = value;
					this.SendPropertyChanged("Image");
					this.OnImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fkMediaTypeId", DbType="Int")]
		public System.Nullable<int> fkMediaTypeId
		{
			get
			{
				return this._fkMediaTypeId;
			}
			set
			{
				if ((this._fkMediaTypeId != value))
				{
					this.OnfkMediaTypeIdChanging(value);
					this.SendPropertyChanging();
					this._fkMediaTypeId = value;
					this.SendPropertyChanged("fkMediaTypeId");
					this.OnfkMediaTypeIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MediaType")]
	public partial class MediaType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MediaTypeId;
		
		private string _MediaType1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMediaTypeIdChanging(int value);
    partial void OnMediaTypeIdChanged();
    partial void OnMediaType1Changing(string value);
    partial void OnMediaType1Changed();
    #endregion
		
		public MediaType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MediaTypeId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MediaTypeId
		{
			get
			{
				return this._MediaTypeId;
			}
			set
			{
				if ((this._MediaTypeId != value))
				{
					this.OnMediaTypeIdChanging(value);
					this.SendPropertyChanging();
					this._MediaTypeId = value;
					this.SendPropertyChanged("MediaTypeId");
					this.OnMediaTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="MediaType", Storage="_MediaType1", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string MediaType1
		{
			get
			{
				return this._MediaType1;
			}
			set
			{
				if ((this._MediaType1 != value))
				{
					this.OnMediaType1Changing(value);
					this.SendPropertyChanging();
					this._MediaType1 = value;
					this.SendPropertyChanged("MediaType1");
					this.OnMediaType1Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
